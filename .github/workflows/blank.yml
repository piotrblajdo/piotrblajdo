# This is a basic workflow to help you get started with Actions


name: CI


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: show varilabele
        run:  echo $git_user_email
      - name: Dump branche name
        run: echo ${{ github.head_ref }}

      - name: Dump event JSON and environment
        run: cat "$GITHUB_EVENT_PATH"; env

      - uses: actions/checkout@v3

      - name: Upload file with changes to releases
        run: |
            PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
            mkdir -p releases
            FILES_COUNT=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER | jq -r '.changed_files')
            for p in $(seq $(expr $FILES_COUNT / 100 + 1))
            do
              URL="https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/files?per_page=100&page=$p"
              echo "GET: $URL"
              FILES=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $URL | jq -r '.[] | .filename, .status')
              echo $FILES | tr " " "\n" >> changes.txt
            done
            echo "Changed files:"
            cat changes.txt

      - name: Make clone dir
        run: |
                CLONE_DIRECTORY1=$(mktemp -d)

      - name: Checkout private tools
        uses: actions/checkout@v3
        with:
          repository: piotrblajdo/destimation
          token: ${{ secrets.GITHUB_TOKEN}} # `GH_PAT` is a secret that contains your PAT
          path: my-tools
          ref: my-branch

      - name: Clone destmation repository
        run: |
            echo "##### Cloning destination Github repository #####"
            # Setup git
            CLONE_DIRECTORY=$(mktemp -d)
            git config --global user.email "$git_user_email"
            git config --global user.name "$git_user_name"
            git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | xargs -L1 git config --unset-all
            git clone "https://piotrblajdo:${{ secrets.GITHUB_TOKEN }}@github.com/piotrblajdo/destimation.git" "$CLONE_DIRECTORY"
            ls -la "$CLONE_DIRECTORY"
        env:
          git_user_email: piotrblajdo@gmail.com
          git_user_name: piotrblajdo
          git_dest_token: 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

#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.

